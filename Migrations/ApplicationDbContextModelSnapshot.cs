// <auto-generated />
using System;
using ClimateChangeDashboardBackendApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ClimateChangeDashboardBackend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ClimateChangeDashboardBackend.Models.Analytics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Browser")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PageViewed")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferrerUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("SessionId")
                        .HasColumnType("uuid");

                    b.Property<string>("TimeStamp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Analytics");

                    b.HasData(
                        new
                        {
                            Id = new Guid("61084f93-54d5-457f-9c6b-b100fc29cd6a"),
                            Browser = "Chrome",
                            DeviceType = "Desktop",
                            PageViewed = "ClimateChangeDashboard",
                            ReferrerUrl = "www.google.com",
                            SessionId = new Guid("6cad72f9-f844-4dcd-a7c8-75731edfca3a"),
                            TimeStamp = "2023-08-20T03:11:44.569Z",
                            UserId = new Guid("dc875fd0-da87-4c86-ac41-9cec978a58b3")
                        },
                        new
                        {
                            Id = new Guid("918d2e76-cd7f-4520-850c-6cb8df002d99"),
                            Browser = "Chrome",
                            DeviceType = "Desktop",
                            PageViewed = "ClimateChangeDashboard",
                            ReferrerUrl = "www.google.com",
                            SessionId = new Guid("a16ba5b6-21a4-4d83-9aa6-91d1715448f8"),
                            TimeStamp = "2023-08-20T03:11:44.569Z",
                            UserId = new Guid("12a605c1-51b2-4ffe-9782-13abc680c571")
                        },
                        new
                        {
                            Id = new Guid("af784f76-f05d-4930-bf41-5e587f581bc7"),
                            Browser = "Chrome",
                            DeviceType = "Desktop",
                            PageViewed = "ClimateChangeDashboard",
                            ReferrerUrl = "www.google.com",
                            SessionId = new Guid("603ab4d2-8739-462b-b291-f81c383bb3e8"),
                            TimeStamp = "2023-08-20T03:11:44.569Z",
                            UserId = new Guid("4d18a679-046b-46db-8c6e-0fea0c6da2cb")
                        });
                });

            modelBuilder.Entity("ClimateChangeDashboardBackend.Models.Feedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ce7909e5-2d6e-4980-bb10-f63b163a09d7"),
                            Body = "this is the body",
                            CreatedAt = "2023-08-20T03:11:44.569Z",
                            Role = "BaseUser",
                            Status = "pending",
                            Title = "title",
                            UserId = new Guid("dc875fd0-da87-4c86-ac41-9cec978a58b3")
                        },
                        new
                        {
                            Id = new Guid("a5105cf4-dbfa-4087-b6c8-673f4beea6bb"),
                            Body = "this is the body 2",
                            CreatedAt = "2023-08-20T03:11:44.569Z",
                            Role = "BaseUser",
                            Status = "pending",
                            Title = "title 2",
                            UserId = new Guid("12a605c1-51b2-4ffe-9782-13abc680c571")
                        });
                });

            modelBuilder.Entity("ClimateChangeDashboardBackend.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MembershipLevel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dc875fd0-da87-4c86-ac41-9cec978a58b3"),
                            Address = "123 Lake ave",
                            City = "Colorado Springs",
                            Country = "United States",
                            CreatedAt = "2023-08-20T03:11:44.569Z",
                            MembershipLevel = "basic",
                            Password = "abc123",
                            Role = "BaseUser",
                            State = "Colorado",
                            Username = "hunter"
                        },
                        new
                        {
                            Id = new Guid("12a605c1-51b2-4ffe-9782-13abc680c571"),
                            Address = "123 Lake ave",
                            City = "Colorado Springs",
                            Country = "United States",
                            CreatedAt = "2023-07-03T03:03:44.569Z",
                            MembershipLevel = "basic",
                            Password = "abc123",
                            Role = "BaseUser",
                            State = "Colorado",
                            Username = "John"
                        },
                        new
                        {
                            Id = new Guid("4d18a679-046b-46db-8c6e-0fea0c6da2cb"),
                            Address = "123 Lake ave",
                            City = "Colorado Springs",
                            Country = "United States",
                            CreatedAt = "2023-06-27T03:21:44.569Z",
                            MembershipLevel = "basic",
                            Password = "abc123",
                            Role = "BaseUser",
                            State = "Colorado",
                            Username = "hunter"
                        });
                });

            modelBuilder.Entity("ClimateChangeDashboardBackend.Models.Analytics", b =>
                {
                    b.HasOne("ClimateChangeDashboardBackend.Models.User", null)
                        .WithMany("Analytics")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClimateChangeDashboardBackend.Models.Feedback", b =>
                {
                    b.HasOne("ClimateChangeDashboardBackend.Models.User", null)
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClimateChangeDashboardBackend.Models.User", b =>
                {
                    b.Navigation("Analytics");

                    b.Navigation("Feedbacks");
                });
#pragma warning restore 612, 618
        }
    }
}
